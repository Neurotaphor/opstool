# This file is created by opstool.tcl2py(), author:: Yexiang Yan

import openseespy.opensees as ops


def Model():
    ops.model("BasicBuilder", "-ndm", 2, "-ndf", 3)
    ops.node(1, 0, 0, "-mass", 15.0, 15.0, 0.0)
    ops.node(2, 0, 3.6, "-mass", 15.0, 15.0, 0.0)
    ops.node(3, 0, 7.2, "-mass", 15.0, 15.0, 0.0)
    ops.node(4, 7.0, 0.0, "-mass", 30.0, 30.0, 0.0)
    ops.node(5, 7.0, 3.6, "-mass", 30.0, 30.0, 0.0)
    ops.node(6, 7.0, 7.2, "-mass", 30.0, 30.0, 0.0)
    ops.node(7, 14.0, 0.0, "-mass", 15.0, 15.0, 0.0)
    ops.node(8, 14.0, 3.6, "-mass", 15.0, 15.0, 0.0)
    ops.node(9, 14.0, 7.2, "-mass", 15.0, 15.0, 0.0)
    ops.node(10, 0.0, -2.4, "-mass", 4.0, 4.0, 0.0)
    ops.node(11, 0.0, -1.2, "-mass", 4.0, 4.0, 0.0)
    ops.node(12, 7.0, -2.4, "-mass", 4.0, 4.0, 0.0)
    ops.node(13, 7.0, -1.2, "-mass", 4.0, 4.0, 0.0)
    ops.node(14, 14.0, -2.4, "-mass", 4.0, 4.0, 0.0)
    ops.node(15, 14.0, -1.2, "-mass", 4.0, 4.0, 0.0)

    ops.timeSeries("Constant", 2)
    ops.pattern("Plain", 2, 2)
    ops.load(1, 0.0, -150.0, 0)
    ops.load(2, 0.0, -150.0, 0)
    ops.load(3, 0.0, -150.0, 0)
    ops.load(4, 0.0, -300.0, 0)
    ops.load(5, 0.0, -300.0, 0)
    ops.load(6, 0.0, -300.0, 0)
    ops.load(7, 0.0, -150.0, 0)
    ops.load(8, 0.0, -150.0, 0)
    ops.load(9, 0.0, -150.0, 0)
    ops.load(10, 0.0, -40.0, 0)
    ops.load(11, 0.0, -40.0, 0)
    ops.load(12, 0.0, -40.0, 0)
    ops.load(13, 0.0, -40.0, 0)
    ops.load(14, 0.0, -40.0, 0)
    ops.load(15, 0.0, -40.0, 0)
    ops.uniaxialMaterial("Concrete01", 1, -27588.5, -0.002, 0.0, -0.008)
    ops.uniaxialMaterial("Concrete01", 2, -34485.6, -0.004, -20691.4, -0.014)
    ops.uniaxialMaterial("Hardening", 3, 200000000.0, 248200.0, 0.0, 1612900.0)
    ops.uniaxialMaterial("Concrete01", 4, -27588.5, -0.002, 0.0, -0.008)
    ops.uniaxialMaterial("Concrete01", 5, -34485.6, -0.004, -20691.4, -0.014)
    ops.uniaxialMaterial("Hardening", 6, 200000000.0, 248200.0, 0.0, 1612900.0)
    ops.section("Fiber", 1, "-GJ", 100000000.0)
    ops.patch("quad", 2, 1, 12, -0.25, 0.2, -0.25, -0.2, 0.25, -0.2, 0.25, 0.2)
    ops.patch("quad", 1, 1, 14, -0.3, -0.2, -0.3, -0.25, 0.3, -0.25, 0.3, -0.2)
    ops.patch("quad", 1, 1, 14, -0.3, 0.25, -0.3, 0.2, 0.3, 0.2, 0.3, 0.25)
    ops.patch("quad", 1, 1, 2, -0.3, 0.2, -0.3, -0.2, -0.25, -0.2, -0.25, 0.2)
    ops.patch("quad", 1, 1, 2, 0.25, 0.2, 0.25, -0.2, 0.3, -0.2, 0.3, 0.2)
    ops.layer("straight", 3, 3, 0.000645, -0.2, 0.2, -0.2, -0.2)
    ops.layer("straight", 3, 3, 0.000645, 0.2, 0.2, 0.2, -0.2)
    ops.section("Fiber", 2, "-GJ", 100000000.0)
    ops.patch("quad", 2, 1, 10, -0.2, 0.2, -0.2, -0.2, 0.2, -0.2, 0.2, 0.2)
    ops.patch("quad", 1, 1, 12, -0.25, -0.2, -0.25, -0.25, 0.25, -0.25, 0.25, -0.2)
    ops.patch("quad", 1, 1, 12, -0.25, 0.25, -0.25, 0.2, 0.25, 0.2, 0.25, 0.25)
    ops.patch("quad", 1, 1, 2, -0.25, 0.2, -0.25, -0.2, -0.2, -0.2, -0.2, 0.2)
    ops.patch("quad", 1, 1, 2, 0.2, 0.2, 0.2, -0.2, 0.25, -0.2, 0.25, 0.2)
    ops.layer("straight", 3, 3, 0.00051, -0.2, 0.2, -0.2, -0.2)
    ops.layer("straight", 3, 3, 0.00051, 0.2, 0.2, 0.2, -0.2)
    ops.section("Fiber", 3, "-GJ", 100000000.0)
    ops.patch("quad", 1, 1, 12, -0.25, 0.2, -0.25, -0.2, 0.25, -0.2, 0.25, 0.2)
    ops.layer("straight", 3, 2, 0.000645, -0.2, 0.2, -0.2, -0.2)
    ops.layer("straight", 3, 2, 0.000645, 0.2, 0.2, 0.2, -0.2)
    ops.section("Fiber", 4, "-GJ", 100000000.0)
    ops.patch("quad", 5, 1, 12, -0.25, 0.2, -0.25, -0.2, 0.25, -0.2, 0.25, 0.2)
    ops.patch("quad", 4, 1, 14, -0.3, -0.2, -0.3, -0.25, 0.3, -0.25, 0.3, -0.2)
    ops.patch("quad", 4, 1, 14, -0.3, 0.25, -0.3, 0.2, 0.3, 0.2, 0.3, 0.25)
    ops.patch("quad", 4, 1, 2, -0.3, 0.2, -0.3, -0.2, -0.25, -0.2, -0.25, 0.2)
    ops.patch("quad", 4, 1, 2, 0.25, 0.2, 0.25, -0.2, 0.3, -0.2, 0.3, 0.2)
    ops.layer("straight", 6, 3, 0.000645, -0.2, 0.2, -0.2, -0.2)
    ops.layer("straight", 6, 3, 0.000645, 0.2, 0.2, 0.2, -0.2)
    ops.section("Fiber", 5, "-GJ", 100000000.0)
    ops.patch("quad", 5, 1, 10, -0.2, 0.2, -0.2, -0.2, 0.2, -0.2, 0.2, 0.2)
    ops.patch("quad", 4, 1, 12, -0.25, -0.2, -0.25, -0.25, 0.25, -0.25, 0.25, -0.2)
    ops.patch("quad", 4, 1, 12, -0.25, 0.25, -0.25, 0.2, 0.25, 0.2, 0.25, 0.25)
    ops.patch("quad", 4, 1, 2, -0.25, 0.2, -0.25, -0.2, -0.2, -0.2, -0.2, 0.2)
    ops.patch("quad", 4, 1, 2, 0.2, 0.2, 0.2, -0.2, 0.25, -0.2, 0.25, 0.2)
    ops.layer("straight", 6, 3, 0.00051, -0.2, 0.2, -0.2, -0.2)
    ops.layer("straight", 6, 3, 0.00051, 0.2, 0.2, 0.2, -0.2)
    ops.geomTransf("Linear", 1)
    ops.beamIntegration("Legendre", 1, 2, 4)
    ops.element("dispBeamColumn", 1, 1, 2, 1, 1)
    ops.beamIntegration("Legendre", 2, 2, 4)
    ops.element("dispBeamColumn", 2, 2, 3, 1, 2)
    ops.beamIntegration("Legendre", 3, 1, 4)
    ops.element("dispBeamColumn", 3, 4, 5, 1, 3)
    ops.beamIntegration("Legendre", 4, 1, 4)
    ops.element("dispBeamColumn", 4, 5, 6, 1, 4)
    ops.beamIntegration("Legendre", 5, 2, 4)
    ops.element("dispBeamColumn", 5, 7, 8, 1, 5)
    ops.beamIntegration("Legendre", 6, 2, 4)
    ops.element("dispBeamColumn", 6, 8, 9, 1, 6)
    ops.beamIntegration("Legendre", 7, 3, 4)
    ops.element("dispBeamColumn", 7, 2, 5, 1, 7)
    ops.beamIntegration("Legendre", 8, 3, 4)
    ops.element("dispBeamColumn", 8, 5, 8, 1, 8)
    ops.beamIntegration("Legendre", 9, 3, 4)
    ops.element("dispBeamColumn", 9, 3, 6, 1, 9)
    ops.beamIntegration("Legendre", 10, 3, 4)
    ops.element("dispBeamColumn", 10, 6, 9, 1, 10)
    ops.beamIntegration("Legendre", 11, 4, 4)
    ops.element("dispBeamColumn", 11, 10, 11, 1, 11)
    ops.beamIntegration("Legendre", 12, 4, 4)
    ops.element("dispBeamColumn", 12, 11, 1, 1, 12)
    ops.beamIntegration("Legendre", 13, 5, 4)
    ops.element("dispBeamColumn", 13, 12, 13, 1, 13)
    ops.beamIntegration("Legendre", 14, 5, 4)
    ops.element("dispBeamColumn", 14, 13, 4, 1, 14)
    ops.beamIntegration("Legendre", 15, 4, 4)
    ops.element("dispBeamColumn", 15, 14, 15, 1, 15)
    ops.beamIntegration("Legendre", 16, 4, 4)
    ops.element("dispBeamColumn", 16, 15, 7, 1, 16)

    ops.model("basic", "-ndm", 2, "-ndf", 2)
    ops.node(16, -9.2, -7.2)
    ops.node(17, -7.2, -7.2)
    ops.node(18, -5.2, -7.2)
    ops.node(19, -3.2, -7.2)
    ops.node(20, -1.2, -7.2)
    ops.node(21, 0.0, -7.2)
    ops.node(22, 1.2, -7.2)
    ops.node(23, 3.5, -7.2)
    ops.node(24, 5.8, -7.2)
    ops.node(25, 7.0, -7.2)
    ops.node(26, 8.2, -7.2)
    ops.node(27, 10.5, -7.2)
    ops.node(28, 12.8, -7.2)
    ops.node(29, 14.0, -7.2)
    ops.node(30, 15.2, -7.2)
    ops.node(31, 17.2, -7.2)
    ops.node(32, 19.2, -7.2)
    ops.node(33, 21.2, -7.2)
    ops.node(34, 23.2, -7.2)
    ops.node(35, -9.2, -4.8)
    ops.node(36, -7.2, -4.8)
    ops.node(37, -5.2, -4.8)
    ops.node(38, -3.2, -4.8)
    ops.node(39, -1.2, -4.8)
    ops.node(40, 0.0, -4.8)
    ops.node(41, 1.2, -4.8)
    ops.node(42, 3.5, -4.8)
    ops.node(43, 5.8, -4.8)
    ops.node(44, 7.0, -4.8)
    ops.node(45, 8.2, -4.8)
    ops.node(46, 10.5, -4.8)
    ops.node(47, 12.8, -4.8)
    ops.node(48, 14.0, -4.8)
    ops.node(49, 15.2, -4.8)
    ops.node(50, 17.2, -4.8)
    ops.node(51, 19.2, -4.8)
    ops.node(52, 21.2, -4.8)
    ops.node(53, 23.2, -4.8)
    ops.node(54, -9.2, -2.4)
    ops.node(55, -7.2, -2.4)
    ops.node(56, -5.2, -2.4)
    ops.node(57, -3.2, -2.4)
    ops.node(58, -1.2, -2.4)
    ops.node(59, 0.0, -2.4)
    ops.node(60, 1.2, -2.4)
    ops.node(61, 3.5, -2.4)
    ops.node(62, 5.8, -2.4)
    ops.node(63, 7.0, -2.4)
    ops.node(64, 8.2, -2.4)
    ops.node(65, 10.5, -2.4)
    ops.node(66, 12.8, -2.4)
    ops.node(67, 14.0, -2.4)
    ops.node(68, 15.2, -2.4)
    ops.node(69, 17.2, -2.4)
    ops.node(70, 19.2, -2.4)
    ops.node(71, 21.2, -2.4)
    ops.node(72, 23.2, -2.4)
    ops.node(73, -9.2, -1.2)
    ops.node(74, -7.2, -1.2)
    ops.node(75, -5.2, -1.2)
    ops.node(76, -3.2, -1.2)
    ops.node(77, -1.2, -1.2)
    ops.node(78, 0.0, -1.2)
    ops.node(79, 1.2, -1.2)
    ops.node(80, 3.5, -1.2)
    ops.node(81, 5.8, -1.2)
    ops.node(82, 7.0, -1.2)
    ops.node(83, 8.2, -1.2)
    ops.node(84, 10.5, -1.2)
    ops.node(85, 12.8, -1.2)
    ops.node(86, 14.0, -1.2)
    ops.node(87, 15.2, -1.2)
    ops.node(88, 17.2, -1.2)
    ops.node(89, 19.2, -1.2)
    ops.node(90, 21.2, -1.2)
    ops.node(91, 23.2, -1.2)
    ops.node(92, -9.2, 0)
    ops.node(93, -7.2, 0)
    ops.node(94, -5.2, 0)
    ops.node(95, -3.2, 0)
    ops.node(96, -1.2, 0)
    ops.node(97, 0.0, 0)
    ops.node(98, 1.2, 0)
    ops.node(99, 3.5, 0)
    ops.node(100, 5.8, 0)
    ops.node(101, 7.0, 0)
    ops.node(102, 8.2, 0)
    ops.node(103, 10.5, 0)
    ops.node(104, 12.8, 0)
    ops.node(105, 14.0, 0)
    ops.node(106, 15.2, 0)
    ops.node(107, 17.2, 0)
    ops.node(108, 19.2, 0)
    ops.node(109, 21.2, 0)
    ops.node(110, 23.2, 0)
    ops.fix(16, 1, 1)
    ops.fix(17, 1, 1)
    ops.fix(18, 1, 1)
    ops.fix(19, 1, 1)
    ops.fix(20, 1, 1)
    ops.fix(21, 1, 1)
    ops.fix(22, 1, 1)
    ops.fix(23, 1, 1)
    ops.fix(24, 1, 1)
    ops.fix(25, 1, 1)
    ops.fix(26, 1, 1)
    ops.fix(27, 1, 1)
    ops.fix(28, 1, 1)
    ops.fix(29, 1, 1)
    ops.fix(30, 1, 1)
    ops.fix(31, 1, 1)
    ops.fix(32, 1, 1)
    ops.fix(33, 1, 1)
    ops.fix(34, 1, 1)
    ops.nDMaterial("MultiYieldSurfaceClay", 101, 2, 0.0, 54450, 160000.0, 33.0, 0.1)
    ops.nDMaterial("MultiYieldSurfaceClay", 102, 2, 0.0, 33800, 100000.0, 26.0, 0.1)
    ops.nDMaterial("MultiYieldSurfaceClay", 103, 2, 0.0, 61250, 180000.0, 35.0, 0.1)
    ops.nDMaterial("MultiYieldSurfaceClay", 104, 2, 0.0, 96800, 290000.0, 44.0, 0.1)
    ops.nDMaterial("MultiYieldSurfaceClay", 100, 2, 0.0, 20000000.0, 1000000.0, 21000.0, 50.0, 0, 100, 0, 2)
    ops.element("quadWithSensitivity", 17, 16, 17, 36, 35, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 18, 17, 18, 37, 36, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 19, 18, 19, 38, 37, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 20, 19, 20, 39, 38, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 21, 20, 21, 40, 39, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 22, 21, 22, 41, 40, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 23, 22, 23, 42, 41, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 24, 23, 24, 43, 42, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 25, 24, 25, 44, 43, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 26, 25, 26, 45, 44, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 27, 26, 27, 46, 45, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 28, 27, 28, 47, 46, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 29, 28, 29, 48, 47, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 30, 29, 30, 49, 48, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 31, 30, 31, 50, 49, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 32, 31, 32, 51, 50, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 33, 32, 33, 52, 51, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 34, 33, 34, 53, 52, 0.6, "PlaneStrain", 104, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 35, 35, 36, 55, 54, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 36, 36, 37, 56, 55, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 37, 37, 38, 57, 56, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 38, 38, 39, 58, 57, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 39, 39, 40, 59, 58, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 40, 40, 41, 60, 59, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 41, 41, 42, 61, 60, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 42, 42, 43, 62, 61, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 43, 43, 44, 63, 62, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 44, 44, 45, 64, 63, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 45, 45, 46, 65, 64, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 46, 46, 47, 66, 65, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 47, 47, 48, 67, 66, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 48, 48, 49, 68, 67, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 49, 49, 50, 69, 68, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 50, 50, 51, 70, 69, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 51, 51, 52, 71, 70, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 52, 52, 53, 72, 71, 0.6, "PlaneStrain", 103, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 53, 54, 55, 74, 73, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 54, 55, 56, 75, 74, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 55, 56, 57, 76, 75, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 56, 57, 58, 77, 76, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 57, 58, 59, 78, 77, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 58, 59, 60, 79, 78, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 59, 60, 61, 80, 79, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 60, 61, 62, 81, 80, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 61, 62, 63, 82, 81, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 62, 63, 64, 83, 82, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 63, 64, 65, 84, 83, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 64, 65, 66, 85, 84, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 65, 66, 67, 86, 85, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 66, 67, 68, 87, 86, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 67, 68, 69, 88, 87, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 68, 69, 70, 89, 88, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 69, 70, 71, 90, 89, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 70, 71, 72, 91, 90, 0.6, "PlaneStrain", 102, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 71, 73, 74, 93, 92, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 72, 74, 75, 94, 93, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 73, 75, 76, 95, 94, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 74, 76, 77, 96, 95, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 75, 77, 78, 97, 96, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 76, 78, 79, 98, 97, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 77, 79, 80, 99, 98, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 78, 80, 81, 100, 99, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 79, 81, 82, 101, 100, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 80, 82, 83, 102, 101, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 81, 83, 84, 103, 102, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 82, 84, 85, 104, 103, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 83, 85, 86, 105, 104, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 84, 86, 87, 106, 105, 0.6, "PlaneStrain", 100, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 85, 87, 88, 107, 106, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 86, 88, 89, 108, 107, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 87, 89, 90, 109, 108, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.element("quadWithSensitivity", 88, 90, 91, 110, 109, 0.6, "PlaneStrain", 101, 0, 2.0, 0, -19.6)
    ops.equalDOF(16, 34, 1, 2)
    ops.equalDOF(35, 53, 1, 2)
    ops.equalDOF(54, 72, 1, 2)
    ops.equalDOF(73, 91, 1, 2)
    ops.equalDOF(92, 110, 1, 2)
    ops.equalDOF(1, 97, 1, 2)
    ops.equalDOF(11, 78, 1, 2)
    ops.equalDOF(10, 59, 1, 2)
    ops.equalDOF(4, 101, 1, 2)
    ops.equalDOF(13, 82, 1, 2)
    ops.equalDOF(12, 63, 1, 2)
    ops.equalDOF(7, 105, 1, 2)
    ops.equalDOF(15, 86, 1, 2)
    ops.equalDOF(14, 67, 1, 2)


# ops.recorder("Node", "-file", "node6.out", "-time", "-node", 6, "-dof", 1, 2, "disp")
# ops.recorder("Node", "-file", "node5.out", "-time", "-node", 5, "-dof", 1, 2, "disp")
# ops.recorder("Node", "-file", "node4.out", "-time", "-node", 4, "-dof", 1, 2, "disp")
# ops.recorder("Node", "-file", "node13.out", "-time", "-node", 13, "-dof", 1, 2, "disp")
# ops.recorder("Node", "-file", "node12.out", "-time", "-node", 12, "-dof", 1, 2, "disp")
# ops.recorder("Node", "-file", "node99.out", "-time", "-node", 99, "-dof", 1, 2, "disp")
# ops.recorder("Node", "-file", "node80.out", "-time", "-node", 80, "-dof", 1, 2, "disp")
# ops.recorder("Node", "-file", "node61.out", "-time", "-node", 61, "-dof", 1, 2, "disp")
# ops.recorder("Node", "-file", "node42.out", "-time", "-node", 42, "-dof", 1, 2, "disp")
# ops.recorder("Node", "-file", "node23.out", "-time", "-node", 23, "-dof", 1, 2, "disp")
# ops.recorder("Element", "-ele", 23, "-time", "-file", "stress23.out", "-time", "material", 2, "stress")
# ops.recorder("Element", "-ele", 41, "-time", "-file", "stress41.out", "-time", "material", 2, "stress")
# ops.recorder("Element", "-ele", 59, "-time", "-file", "stress59.out", "-time", "material", 2, "stress")
# ops.recorder("Element", "-ele", 77, "-time", "-file", "stress77.out", "-time", "material", 2, "stress")
# ops.recorder("Element", "-ele", 37, "-time", "-file", "stress37.out", "-time", "material", 2, "stress")
# ops.recorder("Element", "-ele", 37, "-time", "-file", "strain37.out", "-time", "material", 2, "strain")
# ops.constraints(
#     "Transformation",
# )
# ops.numberer(
#     "RCM",
# )
# ops.test("NormDispIncr", 1e-06, 25, 2)
# ops.integrator("LoadControl", 1, 1, 1, 1)
# ops.algorithm(
#     "Newton",
# )
# ops.system(
#     "BandGeneral",
# )
# ops.analysis(
#     "Static",
# )
# ops.analyze(
#     3,
# )
# print("soil gravity nonlinear analysis completed ...")
# ops.wipeAnalysis()
# ops.constraints(
#     "Transformation",
# )
# ops.test("NormDispIncr", 1e-06, 25, 2)
# ops.algorithm(
#     "Newton",
# )
# ops.numberer(
#     "RCM",
# )
# ops.system(
#     "BandGeneral",
# )
# ops.integrator("Newmark", 0.55, 0.275625)
# ops.analysis(
#     "Transient",
# )
# ops.pattern("UniformExcitation", 1, 1, "-accel", "Series -factor 3 -filePath elcentro.txt -dt 0.01")
# ops.analyze(2400, 0.005)
